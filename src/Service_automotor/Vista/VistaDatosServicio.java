package Service_automotor.Vista;

import Service_automotor.modelo.clases.Servicio;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 *
 * @author natyb
 */
public class VistaDatosServicio extends javax.swing.JFrame {

    /**
     * Creates new form VistaDatosServicioF
     */
    public VistaDatosServicio() {
        initComponents();
        setLocationRelativeTo(null);
    }
    public void completarTitulo(String tituloTabla) {
        jLabelTituloDatos.setText(tituloTabla);
    }
    
    public void mostrarDatosServicio(Servicio serv) {
        jTextFieldCosto.setText(String.valueOf(serv.getCosto()));
        jTextFieldKMS.setText(String.valueOf(serv.getCantKms()));
        jTextFieldIDAuto.setText(String.valueOf(serv.getIDAuto()));
        jTextFieldIDServ.setText(String.valueOf(serv.getIDServicio()));
        jTextFieldFecha.setText(String.valueOf(serv.getFechaRealizacion()));
        //jFormattedTextFieldFecha.setText(String.valueOf(serv.getFechaRealizacion()));
    }

    public void setearIdServicio(int maxServicio) {
        jTextFieldIDServ.setText(String.valueOf(maxServicio));
    }

    public void limpiarCampos() {
        jTextFieldCosto.setText("");
        jTextFieldKMS.setText("");
        jTextFieldIDAuto.setText("");
        jTextFieldIDServ.setText("");
        jTextFieldFecha.setText("");
    }

    public void addGrabarDatosListener(ActionListener al) {
        this.jButtonServicios.addActionListener(al);
    }

    public void addVolverListener(ActionListener al) {
        this.jButtonVolver.addActionListener(al);
    }

    public Servicio getServicio() {
        validarDatos();
        int idServ = Integer.parseInt(this.jTextFieldIDServ.getText());
        int costo = Integer.parseInt(this.jTextFieldCosto.getText());
        int kms = Integer.parseInt(this.jTextFieldKMS.getText());
        LocalDate fecha = LocalDate.parse(this.jTextFieldFecha.getText());
        int idAuto = Integer.parseInt(this.jTextFieldIDAuto.getText());
        return new Servicio(idServ, costo, kms, fecha, idAuto);
    }

    public void validarDatos() {
        String costo = this.jTextFieldCosto.getText();
        if (costo == null || costo.equals("")) {
            String campo = "Costo del Servicio";
            throw new IllegalStateException("El campo \"" + campo + "\" está vacío");
        }
        String kms = this.jTextFieldKMS.getText();
        if (kms == null || kms.equals("")) {
            String campo = "Cantidad de Kms";
            throw new IllegalStateException("El campo \"" + campo + "\" está vacío");
        }
        String fecha = this.jTextFieldFecha.getText();
        if (fecha == null || fecha.equals("")) {
            String campo = "Fecha de Realización";
            throw new IllegalStateException("El campo \"" + campo + "\" está vacío");
        }
        String idAuto = this.jTextFieldIDAuto.getText();
        if (idAuto == null || idAuto.equals("")) {
            String campo = "ID Auto";
            throw new IllegalStateException("El campo \"" + campo + "\" está vacío");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTituloDatos = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCosto = new javax.swing.JTextField();
        jTextFieldKMS = new javax.swing.JTextField();
        jFormattedTextFieldFecha = new javax.swing.JFormattedTextField();
        jTextFieldIDAuto = new javax.swing.JTextField();
        jTextFieldIDServ = new javax.swing.JTextField();
        jButtonServicios = new javax.swing.JButton();
        jTextFieldFecha = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButtonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabelTituloDatos.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabelTituloDatos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTituloDatos.setText("Ingrese la descripción del Servicio realizado");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Costo del servicio:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Cantidad de kms:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Fecha de realización:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("ID Auto:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("ID Asignado:");

        jTextFieldCosto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCostoActionPerformed(evt);
            }
        });
        jTextFieldCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCostoKeyTyped(evt);
            }
        });

        jTextFieldKMS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldKMSKeyTyped(evt);
            }
        });

        jFormattedTextFieldFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        jFormattedTextFieldFecha.setText("aaaa-MM-dd");
        jFormattedTextFieldFecha.setEnabled(false);
        jFormattedTextFieldFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldFechaActionPerformed(evt);
            }
        });
        jFormattedTextFieldFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldFechaKeyTyped(evt);
            }
        });

        jTextFieldIDAuto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldIDAutoKeyTyped(evt);
            }
        });

        jTextFieldIDServ.setText("999");
        jTextFieldIDServ.setEnabled(false);

        jButtonServicios.setBackground(new java.awt.Color(51, 102, 255));
        jButtonServicios.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonServicios.setForeground(new java.awt.Color(255, 255, 255));
        jButtonServicios.setText("Grabar Datos");
        jButtonServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonServiciosActionPerformed(evt);
            }
        });

        jLabel7.setText("formato de fecha:");

        jButtonVolver.setBackground(new java.awt.Color(51, 102, 255));
        jButtonVolver.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonVolver.setForeground(new java.awt.Color(255, 255, 255));
        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jButtonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldCosto)
                                    .addComponent(jTextFieldFecha)
                                    .addComponent(jTextFieldKMS, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jFormattedTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonServicios)
                                    .addComponent(jTextFieldIDServ, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldIDAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabelTituloDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabelTituloDatos, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIDServ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldKMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldIDAuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonServicios)
                    .addComponent(jButtonVolver))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCostoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCostoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCostoActionPerformed

    private void jButtonServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonServiciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonServiciosActionPerformed

    private void jTextFieldCostoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCostoKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            evt.consume();
        }
        if (jTextFieldCosto.getText().trim().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldCostoKeyTyped

    private void jTextFieldKMSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldKMSKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            evt.consume();
        }
        if (jTextFieldKMS.getText().trim().length() == 7) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldKMSKeyTyped

    private void jTextFieldIDAutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDAutoKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            evt.consume();
        }
        if (jTextFieldIDAuto.getText().trim().length() == 6) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldIDAutoKeyTyped

    private void jFormattedTextFieldFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldFechaKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        //        if (!numeros) {
        //            evt.consume();
        //        }
        String fechaStr = jTextFieldFecha.getText();
        if (fechaStr == null) {
            JOptionPane.showMessageDialog(null, "Campo vacío");
        } else {
            String[] fecha = fechaStr.split("-");
            if (fecha.length == 3) {

                if (!validarAnio(fecha[0])) {
                    JOptionPane.showMessageDialog(null, "El AÑO no es correcto");
                } else if (!validarMes(fecha[1])) {
                    JOptionPane.showMessageDialog(null, "El MES no es correcto");
                } else if (!validarDia(fecha[2])) {
                    JOptionPane.showMessageDialog(null, "El DIA no es correcto");
                } else {
                    JOptionPane.showMessageDialog(null, "Formato de fecha parece correcto");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Formato incorrecto");
            }

        }

        if (jTextFieldFecha.getText().trim().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jFormattedTextFieldFechaKeyTyped

    private void jFormattedTextFieldFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldFechaActionPerformed

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private boolean validarDia(String dia) {
        if (dia.length() != 2) //Comprobamos que son dos caracteres
        {
            return false;
        } else { //Y que es un valor numérico, entre 0 y 31
            try {
                int dd = Integer.parseInt(dia);
                return (dd > 0 && dd < 31);
            } catch (NumberFormatException e) {
                return false; //No se ha tecleado un valor numérico
            }
        }
    }

    private boolean validarMes(String mes) {
        if (mes.length() != 2) {
            return false;
        } else {
            try {
                int mm = Integer.parseInt(mes);
                return (mm > 0 && mm < 13);
            } catch (NumberFormatException e) {
                return false;
            }
        }

    }

    private boolean validarAnio(String anio) {
        if (anio.length() != 4) {
            return false;
        } else {
            try {
                int aaaa = Integer.parseInt(anio);
                return (aaaa != 0); //Aquí depende de que fechas queremos aceptar
            } catch (NumberFormatException e) {
                return false;
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonServicios;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JFormattedTextField jFormattedTextFieldFecha;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelTituloDatos;
    private javax.swing.JTextField jTextFieldCosto;
    private javax.swing.JTextField jTextFieldFecha;
    private javax.swing.JTextField jTextFieldIDAuto;
    private javax.swing.JTextField jTextFieldIDServ;
    private javax.swing.JTextField jTextFieldKMS;
    // End of variables declaration//GEN-END:variables
}
